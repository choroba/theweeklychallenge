<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on The Weekly Challenge</title>
    <link>https://theweeklychallenge.org/tags/aws/</link>
    <description>Recent content in aws on The Weekly Challenge</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Aug 2025 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://theweeklychallenge.org/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Lambda</title>
      <link>https://theweeklychallenge.org/blog/aws-lambda/</link>
      <pubDate>Tue, 05 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-lambda/</guid>
      <description>DISCLAIMER: Image is generated using ChatGPT. 1. Introduction 2. Lambda Function 3. Using aws 4. Using Python 5. Using Perl Introduction  This post came nearly after a month and half. The last post about AWS related topic was about AWS DynamoDB. The break wasn&amp;rsquo;t intended, though.
AWS Lambda is a serverless compute service that allows you to run code without having to manage servers. You simply upload your code and Lambda takes care of the scaling, patching and execution, charging you only for the duration your code is executed.</description>
    </item>
    
    <item>
      <title>AWS DynamoDB</title>
      <link>https://theweeklychallenge.org/blog/aws-dynamodb/</link>
      <pubDate>Wed, 25 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-dynamodb/</guid>
      <description>DISCLAIMER: Image is generated using ChatGPT. 1. Introduction 2. DynamoDB Structure 3. Setup LocalStack 4. Using CLI 5. Using Python 6. Using Perl Introduction  AWS DynamoDB is a fully managed NoSQL database service provided by AWS.
It is designed for high availability, scalability and low-latency performance.
It is a popular choice for modern applications that require fast and flexible data storage.
Unlike traditional relational databases, DynamoDB is schemaless, meaning it does not require a fixed table structure.</description>
    </item>
    
    <item>
      <title>AWS CloudFront</title>
      <link>https://theweeklychallenge.org/blog/aws-cloudfront/</link>
      <pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-cloudfront/</guid>
      <description>DISCLAIMER: Image is generated using Leonardo AI. 1. Introduction 2. What&amp;rsquo;s AWS CloudFront? 3. Setup Origin 4. Create Content 5. Setup Configuration 6. Create Distribution 7. Mock CloudFront 8. Testing Time 9. Cleanup Introduction  Imagine you&amp;rsquo;re running a FastFood shop and you want to deliver food as fast as possible to customers all over the world.
But if your shop is only in, say, London, someone in Paris might have to wait a long time for their food to arrive.</description>
    </item>
    
    <item>
      <title>AWS Customer Key Encryption</title>
      <link>https://theweeklychallenge.org/blog/aws-customer-key-encryption/</link>
      <pubDate>Sun, 15 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-customer-key-encryption/</guid>
      <description>DISCLAIMER: Image is generated using ChatGPT. 1. Introduction 2. Customer Provided Keys (SSE-C) 3. Using aws 4. Using Python 5. Using Perl Introduction  Continuing the blog series on AWS encryption, this post focuses on Server-Side Encryption using Customer-Provided Keys.
Previously, I covered the other two types of Server-Side Encryption i.e. S3 Encryption and KMS Encryption.
In this type of encryption, customer generates and manages the encryption key.
AWS does not store customer keys, they must be provided with every API request.</description>
    </item>
    
    <item>
      <title>AWS Bedrock</title>
      <link>https://theweeklychallenge.org/blog/aws-bedrock/</link>
      <pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-bedrock/</guid>
      <description>DISCLAIMER: Image is generated using ChatGPT. 1. Introduction 2. What&amp;rsquo;s Ollama? 3. Install Ollama 4. Run Ollama 5. FastAPI 6. Mock Bedrock - Python 7. Mock Bedrock - Perl 8. Uvicorn 9. Mock Test Introduction  Recently I was introduced to AWS Bedrock at work. Ever since, I&amp;rsquo;ve had many questions around it.
In this post, I am sharing my first encounter.
AWS Bedrock is a fully managed service offered by Amazon Web Services.</description>
    </item>
    
    <item>
      <title>AWS KMS Encryption</title>
      <link>https://theweeklychallenge.org/blog/aws-kms-encryption/</link>
      <pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-kms-encryption/</guid>
      <description>DISCLAIMER: Image is generated using Leonardo AI. AWS KMS Encryption  1. Introduction 2. Using aws 3. Using Python 4. Using Perl Introduction  This post is in continuation of the last post where we explored the AWS S3 Encryption.
In this post, I would like to talk about encryption using AWS Key Management Service.
AWS Key Management Service (KMS) is a managed service that enables easy encryption of data using cryptographic keys.</description>
    </item>
    
    <item>
      <title>AWS S3 Encryption</title>
      <link>https://theweeklychallenge.org/blog/aws-s3-encryption/</link>
      <pubDate>Thu, 05 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/aws-s3-encryption/</guid>
      <description>DISCLAIMER: Image is generated using Leonardo AI. AWS S3 Encryption  1. Introduction 2. Types of S3 Encryption 3. Server-Side Encryption (SSE) 4. Client-Side Encryption (CSE) 5. AWS Managed Keys (SSE-S3) 6. Using aws 7. Using Python 8. Using Perl Introduction  A week ago, I wrote a blog post about AWS S3 using the LocalStack platform. It was originally intended to cover just the basic operations. However, a few days later, I updated the post to include object versioning in AWS S3.</description>
    </item>
    
    <item>
      <title>LocalStack with AWS S3</title>
      <link>https://theweeklychallenge.org/blog/localstack-aws-s3/</link>
      <pubDate>Sat, 24 May 2025 00:00:00 +0000</pubDate>
      
      <guid>https://theweeklychallenge.org/blog/localstack-aws-s3/</guid>
      <description>DISCLAIMER: Image is generated using Leonardo AI.  1. Introduction 2. Setup awscli 3. Setup LocalStack 4. Make Bucket 5. List Buckets 6. Upload File 7. Download File 8. Delete File 9. List Bucket 10. Remove Bucket 11. S3 with Python 12. S3 with Perl 13. What next? Introduction  Recently I got the opportunity to work with AWS S3 at work.
For this I wanted to brush up my knowledge as last I played with it was an year ago.</description>
    </item>
    
  </channel>
</rss>